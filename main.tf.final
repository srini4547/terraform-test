variable "aws_region" {
    default = "us-east-1"
}
variable "lambda_function_name_for_ec2-terminate-info" {
    default = "ec2-terminate-info"
}



data "archive_file" "lambda_function" {
  type        = "zip"
  source_file = "terminate_instance.py"
  output_path = "terminate_instance.zip"
}
provider "aws" {
  region = "${var.aws_region}"
 }

data "aws_caller_identity" "current" {}

resource "aws_cloudwatch_event_rule" "terminate_instances_event_rule" {
  name = "terminate_instances_event_rule"
  description = "Terminate EC2 instance alert"
  event_pattern = <<PATTERN
    {
        "detail-type:": [
            "EC2 Instance State-change Notification"
        ],
        "source": [
            "aws.ec2"
        ],
        "detail": {
            "state": [
              "stopped"
        ],
        "name": [
            "test1"   
            ]
    }
   }
    PATTERN
  depends_on = ["aws_lambda_function.ec2_terminate_alert"]
}
resource "aws_cloudwatch_event_target" "terminate_instances_event_target" {
  target_id = "terminate_instances_lambda_target"
  rule = "${aws_cloudwatch_event_rule.terminate_instances_event_rule.name}"
  arn = "${aws_lambda_function.ec2-terminate-alert.arn}"
}
resource "aws_lambda_permission" "allow_cloudwatch_to_call_ec2_terminate_alert" {
    statement_id = "AllowExecutionFromCloudWatch"
    action = "lambda:InvokeFunction"
    function_name = "${aws_lambda_function.ec2_terminate_alert.function_name}"
    principal = "events.amazonaws.com"
    source_arn = "${aws_cloudwatch_event_rule.terminate_instances_event_rule.arn}"
}
resource "aws_lambda_function" "ec2_terminate_alert" {
  description   = "ec2 stop alert"
  filename		= "terminate_instance.zip"
  function_name = "${var.lambda_function_name_for_ec2_terminate_info}"
  handler       = "terminate_instance.lambda_handler"
  memory_size   = "128"
  timeout       = "300"
  runtime       = "python2.7"
  role          = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/A_New_Lambda"
  
}
  

